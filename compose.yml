# compose.yml

x-app-environment: &app_environment
  DB_NAME: ${DB_NAME}
  DB_USER: ${DB_USER}
  DB_PASSWORD: ${DB_PASSWORD}
  DB_HOST: db                 
  DB_PORT: 5432
  REDIS_URL: ${REDIS_URL:-redis://redis:6379/0}

services:
  db:
    image: postgres:14-alpine
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB} -h 127.0.0.1"]
      interval: 5s
      timeout: 3s
      retries: 20
    volumes:
      - postgres_data:/var/lib/postgresql/data
    # Quita esto si no necesitas acceder desde tu host:
    # ports:
    #   - "5433:5432"

  redis:
    image: redis:7-alpine
    # Solo si quieres verlo desde tu host:
    # ports:
    #   - "6379:6379"

  app:
    build: .
    ports:
      - "8000:8000"
    env_file:
      - .env                    # SECRET_KEY, DEBUG, etc.
    environment:
      <<: *app_environment      # Fuerza el DB_HOST=db y DB_PORT=5432
    depends_on:
      db:
        condition: service_healthy
    # No pongas command si ya lo defines en el Dockerfile con gunicorn

volumes:
  postgres_data: