# Generated by Django 5.2.4 on 2025-07-28 20:35

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='brands/')),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Marca',
                'verbose_name_plural': 'Marcas',
                'db_table': 'brands',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ProductVariant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Ej: Sabor fresa, 200mg', max_length=100)),
                ('sku_suffix', models.CharField(max_length=20)),
                ('price_adjustment', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('stock', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'product_variants',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('description', models.TextField(blank=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='categories/')),
                ('order', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='products.category')),
            ],
            options={
                'verbose_name': 'Categoría',
                'verbose_name_plural': 'Categorías',
                'db_table': 'categories',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('sku', models.CharField(max_length=50, unique=True)),
                ('short_description', models.TextField(max_length=500)),
                ('description', models.TextField()),
                ('composition', models.TextField(help_text='Composición o ingredientes activos')),
                ('format', models.CharField(choices=[('tablet', 'Tableta'), ('capsule', 'Cápsula'), ('powder', 'Polvo'), ('liquid', 'Líquido'), ('injectable', 'Inyectable'), ('cream', 'Crema'), ('gel', 'Gel'), ('patch', 'Parche')], max_length=20)),
                ('presentation', models.CharField(help_text='Ej: 60 cápsulas, 100ml, 30 tabletas', max_length=100)),
                ('unit', models.CharField(choices=[('tablets', 'Tabletas'), ('capsules', 'Cápsulas'), ('ml', 'Mililitros'), ('g', 'Gramos'), ('kg', 'Kilogramos'), ('vials', 'Viales'), ('ampoules', 'Ampollas'), ('sachets', 'Sobres'), ('units', 'Unidades')], max_length=20)),
                ('quantity', models.IntegerField(help_text='Cantidad total en el envase')),
                ('dosage', models.CharField(blank=True, help_text='Ej: 10mg, 500mg por cápsula', max_length=100)),
                ('usage_instructions', models.TextField()),
                ('recommended_dosage', models.TextField(blank=True)),
                ('benefits', models.TextField(blank=True, help_text='Beneficios principales')),
                ('warnings', models.TextField(blank=True)),
                ('contraindications', models.TextField(blank=True)),
                ('side_effects', models.TextField(blank=True)),
                ('storage_conditions', models.CharField(blank=True, max_length=200)),
                ('technical_info', models.JSONField(blank=True, default=dict, help_text='Información técnica adicional')),
                ('nutritional_info', models.JSONField(blank=True, default=dict, help_text='Información nutricional si aplica')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('compare_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('stock', models.IntegerField(default=0)),
                ('low_stock_threshold', models.IntegerField(default=10)),
                ('requires_prescription', models.BooleanField(default=False)),
                ('batch_number', models.CharField(blank=True, max_length=50)),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('registration_number', models.CharField(blank=True, help_text='Número de registro sanitario', max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('is_new', models.BooleanField(default=False)),
                ('meta_title', models.CharField(blank=True, max_length=200)),
                ('meta_description', models.TextField(blank=True, max_length=320)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='products.brand')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='products.category')),
            ],
            options={
                'verbose_name': 'Producto',
                'verbose_name_plural': 'Productos',
                'db_table': 'products',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProductAttribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('value', models.CharField(max_length=200)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attributes', to='products.product')),
            ],
            options={
                'db_table': 'product_attributes',
            },
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='products/')),
                ('alt_text', models.CharField(blank=True, max_length=200)),
                ('is_primary', models.BooleanField(default=False)),
                ('order', models.IntegerField(default=0)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='products.product')),
            ],
            options={
                'db_table': 'product_images',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='ProductRelated',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relation_type', models.CharField(choices=[('complement', 'Complementario'), ('alternative', 'Alternativa'), ('bundle', 'Paquete')], default='complement', max_length=20)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='related_from', to='products.product')),
                ('related_product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='related_to', to='products.product')),
            ],
            options={
                'db_table': 'product_related',
            },
        ),
        migrations.CreateModel(
            name='ProductReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)])),
                ('title', models.CharField(max_length=200)),
                ('comment', models.TextField()),
                ('is_verified_purchase', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='products.product')),
            ],
            options={
                'db_table': 'product_reviews',
                'ordering': ['-created_at'],
            },
        ),
    ]
